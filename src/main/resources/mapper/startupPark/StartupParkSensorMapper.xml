<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ics.startuppark.sensor.StartupParkSensorMapper">

	<select id="getEnclosureListAll" resultType="ics.startuppark.sensor.dto.EnclosureListDTO">
	<![CDATA[
		select 
			  enclosure.idx as 'enclosureIdx'
			, enclosure.name as 'enclosureName'
			, enclosure.location as 'enclosureLocation'
		from 
			enclosure
		where 
			enclosure.use_yn = 'Y'
		order by
			enclosure.idx
	]]>
	</select>
	
	<select id="getEnclosureList" resultType="ics.startuppark.sensor.dto.EnclosureListDTO">
	<![CDATA[
	SELECT
		s.idx AS 'sensorIdx'
	,	s.location_description AS 'sensorLocation'
	FROM sensor s
	WHERE s.sensor_type_idx IN (1,3)
		AND s.station_idx = 3
	]]>
	</select>
	
	<select id="getSensorTypeInTempHumiDust" resultType="ics.startuppark.sensor.dto.SensorTypeListDTO">
	<![CDATA[
	select 
		sensor_type.idx as 'sensorTypeIdx'
		, sensor_type.sensor_type_name as 'sensorTypeName'
		, sensor_type.sensor_type_code as 'sensorTypeCode' 
	from 
		sensor_type
	where
		sensor_type.idx in (2,4,5)
	]]>
	</select>
	
	<select id="getSensorTypeListAll" resultType="ics.startuppark.sensor.dto.SensorTypeListDTO">
	<![CDATA[
	select 
		sensor_type.idx as 'sensorTypeIdx'
		, sensor_type.sensor_type_name as 'sensorTypeName'
		, sensor_type.sensor_type_code as 'sensorTypeCode' 
	from 
		sensor_type
	]]>
	</select>
	
	<select id="getSensorCntOfCompanyIdx" parameterType="Integer" resultType="Integer">
	<![CDATA[
		select count(sensor.idx) from sensor where use_yn = 'Y'
		 and sensor.company_idx = #{companyIdx}
		 and sensor_approval_status in ('Y', 'R')
	]]>
	</select>	
	
	<select id="getSensorOfCompanyIdx" parameterType="ics.startuppark.sensor.dto.SensorListReqDTO" resultType="ics.startuppark.sensor.dto.SensorListResDTO">
	<![CDATA[
		select 
			* 
		from
			(select 
				 @rownum:=@rownum+1 as rowNum
				, sensor.idx as 'sensorIdx'
				, case when sensor.create_date is not null then date_format(sensor.create_date, '%Y-%m-%d %H:%i:%s')
				else '' end as 'sensorCreateDate'
				, sensor.sensor_id as 'sensorId'
				, sensor.location_description as 'sensorLocationDescription'
				, case when sensor.receive_date is not null then date_format(sensor.receive_date, '%Y-%m-%d %H:%i:%s')
				else '' end as 'sensorReceiveDate'
				, ifnull(sensor.value, '') as 'sensorValue'
				, case when sensor.request_approval_date is not null then date_format(sensor.request_approval_date, '%Y-%m-%d %H:%i:%s')
				else '' end as 'sensorRequestApprovalDate'
				, sensor.sensor_approval_status as 'sensorApprovalStatus' 
				, case when sensor.sensor_approval_date is not null then  date_format(sensor.sensor_approval_date, '%Y-%m-%d %H:%i:%s')
				else '' end as 'sensorApprovalDate'
				, sensor_type.sensor_type_name as 'sensorTypeName'
			from 
				( select @rownum := 0) r, sensor
			left outer join sensor_type
				on sensor.sensor_type_idx = sensor_type.idx 
			where
				sensor.use_yn = 'Y'
				and sensor.company_idx = #{companyIdx}
				and sensor_approval_status in ('Y', 'R')
		) t 
		where
			rowNum BETWEEN #{startNum} and #{endNum}
	]]>
	</select>
	
	<select id="getSensorLogTodayCount" parameterType="ics.startuppark.sensor.dto.SensorLogReqDTO" resultType="Integer">
	<![CDATA[
		select count(sensor_log.idx) from sensor_log 
		where 
				sensor_log.sensor_idx = #{sensorIdx}
			and date_format(sensor_log.create_date, '%Y-%m-%d') = #{startDate}
	]]>
	</select>
	
	<select id="getSensorLogToday" parameterType="ics.startuppark.sensor.dto.SensorLogReqDTO" resultType="ics.startuppark.sensor.dto.SensorLogResDTO">
	<![CDATA[
		with sensorLog as(
			select 
				a.*
			from
			(
				select 
					@rownum:=@rownum+1 as rowNum
					, sensor_log.value as 'sensorLogValue'
					, sensor_log.sensor_idx as 'sensorIdx'
					, date_format(sensor_log.create_date, '%Y-%m-%d %H:%i:%s') as 'sensorLogCreateDate'
				from ( select @rownum := 0) r, sensor_log
				where 
					sensor_log.sensor_idx = #{sensorIdx}
					and date_format(sensor_log.create_date, '%Y-%m-%d') = #{startDate}
				order by 
					sensor_log.create_date
				desc
			)a
			where rowNum BETWEEN #{startNum} and #{endNum}
		) select 
			  sensorLog.*
			, sensor.location_description as 'sensorLocationDescription'
			, sensor_type.sensor_type_code as 'sensorTypeCode'
			, sensor_type.sensor_type_name as 'sensorTypeName'
		from sensorLog
		inner join sensor
			on sensor.idx = sensorLog.sensorIdx
		inner join sensor_type
			on sensor_type.idx = sensor.sensor_type_idx 
		order by
			sensorLogCreateDate desc
	]]>
	</select>
	
	<select id="getSensorLogChart" parameterType="Integer" resultType="ics.startuppark.sensor.dto.SensorLogResDTO">
	<![CDATA[
		with logChart as (
				select 
					  sensor_log.sensor_idx as 'sensorIdx'
					, sensor_log.value as 'sensorLogValue'
					, date_format(sensor_log.create_date, '%Y-%m-%d %H:%i:%s') as 'sensorLogCreateDate'
				from 
					sensor_log
				where 
					sensor_log.sensor_idx = #{sensorIdx}
					and date_format(sensor_log.create_date, '%Y-%m-%d') = date_format(now(), '%Y-%m-%d')
				order by 
					sensor_log.create_date desc
				limit 30
		) select 
			  sensorIdx
			, sensorLogValue
			, sensorLogCreateDate
			, sensor_type.sensor_type_name as 'sensorTypeName'
			, sensor_type.sensor_type_code as 'sensorTypeCode'
		from logChart
		inner join sensor
			on sensor.idx = logChart.sensorIdx
		inner join sensor_type 
			on sensor_type.idx = sensor.sensor_type_idx 
	]]>
	</select>	
	
	<select id="getSensorSelectList" parameterType="Integer" resultType="ics.startuppark.sensor.dto.SensorSelectResDTO">
	<![CDATA[
		select 
			  sensor.idx as 'sensorIdx'
			, sensor.location_description as 'sensorLocationDescription'
		from sensor
		where 
			use_yn = 'Y'
			and sensor_approval_status = 'Y'
	]]>
	
		
		<if test="companyIdx != 0">
			and company_idx = #{companyIdx}
		</if>
	
	</select>
	
	<select id="getSensorLogListCount" parameterType="ics.startuppark.sensor.dto.SensorLogSearchReqDTO" resultType="Integer">
	<![CDATA[
		select 
			count(sensor_log.idx) 
		from 
			sensor_log 
		where 
			date_format(sensor_log.create_date, '%Y-%m-%d') BETWEEN #{startDate} and #{endDate}
			and sensor_log.sensor_idx = #{sensorIdx}
	]]>
	</select>
	
	<select id="getSensorLogList" parameterType="ics.startuppark.sensor.dto.SensorLogSearchReqDTO" resultType="ics.startuppark.sensor.dto.SensorLogSearchResDTO">
	with sensorLog as(
		select 
			a.*
		from
		(
			select 
				@rownum:=@rownum+1 as rowNum
				, sensor_log.value as 'sensorLogValue'
				, sensor_log.sensor_idx as 'sensorIdx'
				, date_format(sensor_log.create_date, '%Y-%m-%d %H:%i:%s') as 'sensorLogCreateDate'
			from ( select @rownum := 0) r, sensor_log
			where 
				date_format(sensor_log.create_date, '%Y-%m-%d') BETWEEN #{startDate} and #{endDate}
				and sensor_log.sensor_idx = #{sensorIdx}			
			order by 
				sensor_log.create_date
			desc
		)a
		where rowNum BETWEEN #{startNum} and #{endNum}
	) select 
		sensorLog.*
		, sensor.location_description as 'sensorLocationDescription'
		, sensor.sensor_id as 'sensorId'
		, sensor_type.sensor_type_name as 'sensorTypeName'
		, sensor_type.sensor_type_code as 'sensorTypeCode'
		, date_format(sensor.sensor_approval_date, '%Y-%m-%d')  as 'sensorApprovalDate'
		, company.company_name as 'companyName'
	from sensorLog
	inner join sensor
		on sensor.idx = sensorLog.sensorIdx
	inner join sensor_type
		on sensor_type.idx = sensor.sensor_type_idx
	inner join company
		on sensor.company_idx = company.idx 
	order by
		sensorLogCreateDate desc	
	</select>
	
	<select id="getSearchChartLog" parameterType="ics.startuppark.sensor.dto.SensorSearchChartLogReqDTO" resultType="ics.startuppark.sensor.dto.SensorSearchChartLogResDTO">
	<![CDATA[
		with logChart as (
				select 
					  sensor_log.sensor_idx as 'sensorIdx'
					, sensor_log.value as 'sensorLogValue'
					, date_format(sensor_log.create_date, '%Y-%m-%d %H:%i:%s') as 'sensorLogCreateDate'
				from 
					sensor_log
				where 
					sensor_log.sensor_idx = #{sensorIdx}
					and date_format(sensor_log.create_date, '%Y-%m-%d') BETWEEN #{startDate} and #{endDate}
				order by 
					sensor_log.create_date desc
				limit 30
		) select 
			  sensorIdx
			, sensorLogValue
			, sensorLogCreateDate
			, sensor_type.sensor_type_name as 'sensorTypeName'
			, sensor_type.sensor_type_code as 'sensorTypeCode'
		from logChart
		inner join sensor
			on sensor.idx = logChart.sensorIdx
		inner join sensor_type 
			on sensor_type.idx = sensor.sensor_type_idx
	]]>
	</select>
	
	<update id="approvalProc" parameterType="ics.startuppark.sensor.dto.SensorApprovalReqDTO">
		update
			sensor
		set
			sensor_approval_status = #{sensorApprovalStatus}
			<if test='sensorApprovalStatus == "Y"'>
				, sensor_approval_date = now()
			</if>
			<if test='sensorApprovalStatus != "Y"'>
				, sensor_approval_date = null
			</if>			
		where
			idx = #{sensorIdx}	
	
	</update>

</mapper>